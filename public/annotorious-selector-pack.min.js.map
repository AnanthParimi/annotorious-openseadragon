{"version":3,"sources":["webpack://Annotorious.SelectorPack/webpack/universalModuleDefinition","webpack://Annotorious.SelectorPack/webpack/bootstrap","webpack://Annotorious.SelectorPack/./node_modules/fast-deep-equal/index.js","webpack://Annotorious.SelectorPack/./node_modules/tiny-emitter/index.js","webpack://Annotorious.SelectorPack/./node_modules/uuid/dist/esm-browser/rng.js","webpack://Annotorious.SelectorPack/./node_modules/@recogito/annotorious/src/util/SVG.js","webpack://Annotorious.SelectorPack/./node_modules/uuid/dist/esm-browser/regex.js","webpack://Annotorious.SelectorPack/./node_modules/uuid/dist/esm-browser/stringify.js","webpack://Annotorious.SelectorPack/./node_modules/uuid/dist/esm-browser/validate.js","webpack://Annotorious.SelectorPack/./node_modules/uuid/dist/esm-browser/v4.js","webpack://Annotorious.SelectorPack/./node_modules/@recogito/recogito-client-core/src/WebAnnotation.js","webpack://Annotorious.SelectorPack/./node_modules/@recogito/recogito-client-core/src/Selection.js","webpack://Annotorious.SelectorPack/./node_modules/@recogito/annotorious/src/tools/Tool.js","webpack://Annotorious.SelectorPack/./node_modules/@recogito/annotorious/src/util/Touch.js","webpack://Annotorious.SelectorPack/./node_modules/@recogito/annotorious/src/selectors/EmbeddedSVG.js","webpack://Annotorious.SelectorPack/./src/circle/Circle.js","webpack://Annotorious.SelectorPack/./src/circle/CircleMask.js","webpack://Annotorious.SelectorPack/./src/circle/RubberbandCircle.js","webpack://Annotorious.SelectorPack/./node_modules/@recogito/annotorious/src/tools/EditableShape.js","webpack://Annotorious.SelectorPack/./node_modules/@recogito/annotorious/src/util/Formatting.js","webpack://Annotorious.SelectorPack/./src/circle/EditableCircle.js","webpack://Annotorious.SelectorPack/./src/circle/RubberbandCircleTool.js","webpack://Annotorious.SelectorPack/./src/ellipse/Ellipse.js","webpack://Annotorious.SelectorPack/./src/ellipse/EllipseMask.js","webpack://Annotorious.SelectorPack/./src/ellipse/RubberbandEllipse.js","webpack://Annotorious.SelectorPack/./src/ellipse/EditableEllipse.js","webpack://Annotorious.SelectorPack/./src/ellipse/RubberbandEllipseTool.js","webpack://Annotorious.SelectorPack/./src/freehand/RubberbandFreehand.js","webpack://Annotorious.SelectorPack/./src/freehand/EditableFreehand.js","webpack://Annotorious.SelectorPack/./src/freehand/RubberbandFreehandTool.js","webpack://Annotorious.SelectorPack/./src/index.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","equal","a","b","constructor","length","keys","Array","isArray","RegExp","source","flags","valueOf","toString","E","on","callback","ctx","e","this","push","fn","once","self","listener","off","apply","arguments","_","emit","data","slice","evtArr","len","evts","liveEvents","TinyEmitter","getRandomValues","SVG_NAMESPACE","getClassNames","el","attr","getAttribute","Set","split","addClass","className","classNames","add","setAttribute","from","join","rnds8","Uint8Array","rng","crypto","msCrypto","Error","validate","uuid","REGEX","test","byteToHex","substr","stringify","arr","offset","undefined","toLowerCase","TypeError","v4","options","buf","rnds","random","WebAnnotation","annotation","opts","opt_props","opt_opts","underlying","type","target","selector","find","other","id","equals","readOnly","motivation","body","bodies","exact","start","end","args","stub","Selection","cloned","JSON","parse","assign","isTouch","navigator","maxTouchPoints","msMaxTouchPoints","ToolLike","g","config","env","evt","pt","svg","createSVGPoint","bbox","getBoundingClientRect","x","clientX","y","clientY","left","top","matrixTransform","getScreenCTM","inverse","offsetX","offsetY","getCTM","containerGroup","document","createElementNS","group","drawCircle","radius","handleRadius","inner","outer","appendChild","handle","querySelector","parseFloat","scale","handles","forEach","closest","EventEmitter","Tool","mouseMove","mouseUp","dblClick","getSVGPoint","started","addEventListener","button","removeEventListener","startDrawing","supports","sanitize","doc","cleanEl","attributes","startsWith","removeAttribute","scripts","getElementsByTagName","reverse","parentNode","removeChild","querySelectorAll","svgFragmentToShape","originalDoc","namespaced","parser","DOMParser","parseFromString","isPrefixDeclared","lookupPrefix","isDefaultNamespaceSVG","lookupNamespaceURI","firstChild","XMLSerializer","serializeToString","documentElement","replace","drawEmbeddedSVG","shape","cloneNode","toSVGTarget","image","serialized","outerHTML","src","setXYR","setCircleSize","cx","cy","innerCircle","outerCircle","getCircleSize","CircleMask","imageDimensions","circle","tx","w","ty","h","mask","naturalWidth","naturalHeight","RubberbandCircle","anchorX","anchorY","oppositeX","oppositeY","style","display","anchor","Math","max","pow","redraw","Mask","pointerEvents","element","EditableShape","ResizeObserver","resizeObserver","svgBounds","viewBox","baseVal","width","height","scaleHandles","observe","Element","HTMLDocument","enableResponsive","disconnect","appendFormatterEl","formatterEl","getBBox","svgEl","append","format","formatter","String","nodeType","Node","ELEMENT_NODE","setFormatterElSize","EditableCircle","elementGroup","topleft","topright","bottomright","bottomleft","setHandleXY","draggedHandleIdx","anchorHandle","mousePos","getHandleXY","mouseX","mouseY","abs","idx0","idx2","idx3","idx1","grabbedElem","pos","grabbedAt","constrain","coord","setSize","handleIdx","indexOf","oppositeHandle","stretchCorners","onMouseMove","onMouseUp","onGrab","map","drawHandle","RubberbandCircleTool","attachListeners","rubberband","destroy","dragTo","detachListeners","minWidth","minSelectionWidth","minHeight","minSelectionHeight","toSelection","stop","identifier","match","rx","ry","setEllipseSize","innerEllipse","outerEllipse","getEllipseSize","EllipseMask","ellipse","RubberbandEllipse","drawEllipse","EditableEllipse","leftHandle","anchorLeft","RubberbandEllipseTool","RubberbandFreehand","points","str","substring","xy","addPoint","setPoints","freehand","getPoints","pointList","point","trim","EditableFreehand","round","num","delta","dx","dy","updatedPoints","RubberbandFreehandTool","_isDrawing","onDblClick","SelectorPack","anno","addDrawingTool"],"mappings":"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","file":"annotorious-selector-pack.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"SelectorPack\"] = factory();\n\telse\n\t\troot[\"Annotorious\"] = root[\"Annotorious\"] || {}, root[\"Annotorious\"][\"SelectorPack\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n","function E () {\n  // Keep this empty so it's easier to inherit from\n  // (via https://github.com/lipsmack from https://github.com/scottcorgan/tiny-emitter/issues/3)\n}\n\nE.prototype = {\n  on: function (name, callback, ctx) {\n    var e = this.e || (this.e = {});\n\n    (e[name] || (e[name] = [])).push({\n      fn: callback,\n      ctx: ctx\n    });\n\n    return this;\n  },\n\n  once: function (name, callback, ctx) {\n    var self = this;\n    function listener () {\n      self.off(name, listener);\n      callback.apply(ctx, arguments);\n    };\n\n    listener._ = callback\n    return this.on(name, listener, ctx);\n  },\n\n  emit: function (name) {\n    var data = [].slice.call(arguments, 1);\n    var evtArr = ((this.e || (this.e = {}))[name] || []).slice();\n    var i = 0;\n    var len = evtArr.length;\n\n    for (i; i < len; i++) {\n      evtArr[i].fn.apply(evtArr[i].ctx, data);\n    }\n\n    return this;\n  },\n\n  off: function (name, callback) {\n    var e = this.e || (this.e = {});\n    var evts = e[name];\n    var liveEvents = [];\n\n    if (evts && callback) {\n      for (var i = 0, len = evts.length; i < len; i++) {\n        if (evts[i].fn !== callback && evts[i].fn._ !== callback)\n          liveEvents.push(evts[i]);\n      }\n    }\n\n    // Remove event from queue to prevent memory leak\n    // Suggested by https://github.com/lazd\n    // Ref: https://github.com/scottcorgan/tiny-emitter/commit/c6ebfaa9bc973b33d110a84a307742b7cf94c953#commitcomment-5024910\n\n    (liveEvents.length)\n      ? e[name] = liveEvents\n      : delete e[name];\n\n    return this;\n  }\n};\n\nmodule.exports = E;\nmodule.exports.TinyEmitter = E;\n","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export const SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\n\nconst getClassNames = el => {\n  const attr = el.getAttribute('class');\n  return attr ? new Set(attr.split(' ')) : new Set();\n}\n\n// IE11 doesn't support adding/removing classes to SVG elements except \n// via .setAttribute\nexport const addClass = (el, className) => {\n  const classNames = getClassNames(el);\n  classNames.add(className);\n  el.setAttribute('class', Array.from(classNames).join(' '));\n}\n\nexport const removeClass = (el, className) => {\n  const classNames = getClassNames(el);\n  classNames.delete(className);\n\n  if (classNames.size === 0)\n    el.removeAttribute('class');\n  else\n    el.setAttribute('class', Array.from(classNames).join(' '));\n}\n\nexport const hasClass = (el, className) =>\n  getClassNames(el).has(className);","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","import { v4 as uuid } from 'uuid';\nimport equals from 'fast-deep-equal';\n\nexport default class WebAnnotation {\n\n  constructor(annotation, opts) {\n    this.underlying = annotation;\n    this.opts = opts;\n  }\n\n  /** For convenience - creates an empty web annotation **/\n  static create = args => {\n    const stub = {\n      '@context': 'http://www.w3.org/ns/anno.jsonld',\n      'type': 'Annotation',\n      'id': `#${uuid()}`,\n      'body': []\n    };\n\n    return new WebAnnotation({ ...stub, ...args });\n  }\n\n  /** Creates a copy of this annotation **/\n  clone = (opt_props, opt_opts) => {\n    return new WebAnnotation({ ...this.underlying, ...opt_props}, { ...this.opts, ...opt_opts });\n  }\n\n  /** An equality check based on the underlying object **/\n  isEqual(other) {\n    if (other?.type !== 'Annotation') {\n      return false;\n    } else if (this.underlying === other.underlying) {\n      return true;\n    } else if (!this.underlying.id || !other.underlying.id) {\n      return false;\n    } else {\n      return equals(this.underlying, other.underlying);\n    }\n  }\n\n  get readOnly() {\n    return this.opts?.readOnly;\n  }\n\n  /*************************************/ \n  /* Getters to forward properties of  */\n  /* the underlying annotation         */\n  /*************************************/\n\n  get id() {\n    return this.underlying.id; \n  }\n\n  get type() {\n    return this.underlying.type;\n  }\n\n  get motivation() {\n    return this.underlying.motivation;\n  }\n\n  get body() {\n    return this.underlying.body;\n  }\n\n  get target() {\n    return this.underlying.target;\n  }\n\n  /** Same as .body, but guaranteed to return an array **/\n  get bodies() {\n    return (Array.isArray(this.underlying.body)) ?\n      this.underlying.body : [ this.underlying.body ];\n  }\n\n  /** Only bodies are meant to be mutated by the application **/\n  set bodies(bodies) {\n    this.underlying.body = bodies;\n  }\n\n  /** Same as .target, but guaranteed to return an array **/\n  get targets() {\n    return (Array.isArray(this.underlying.target)) ?\n      this.underlying.target : [ this.underlying.target ];\n  }\n  \n  /*****************************************/ \n  /* Various access helpers and shorthands */\n  /*****************************************/\n\n  /** Selector of the given type **/\n  selector = type => {\n    const { target } = this.underlying;\n\n    if (target.selector) {\n      // Normalize to array\n      const selectors = Array.isArray(target.selector) ?\n        target.selector : [ target.selector ];\n\n      return selectors.find(s => s.type === type);\n    }\n  }\n\n  /** Shorthand for the 'exact' field of the TextQuoteSelector **/\n  get quote() {\n    return this.selector('TextQuoteSelector').exact;\n  }\n\n  /** Shorthand for the 'start' field of the TextPositionSelector **/\n  get start() {\n    return this.selector('TextPositionSelector').start;\n  }\n\n  /** Shorthand for the 'end' field of the TextPositionSelector **/\n  get end() {\n    return this.selector('TextPositionSelector').end;\n  }\n  \n}\n","import WebAnnotation from './WebAnnotation';\nimport { v4 as uuid } from 'uuid';\nimport equals from 'fast-deep-equal';\n\n/**\n * An \"annotation in draft mode\". Really the same\n * data structure, but as a separate class so we can\n * tell things apart properly.\n */\nexport default class Selection {\n\n  constructor(target, body) {\n    this.underlying = {\n      type: 'Selection',\n      body: body || [],\n      target\n    }\n  }\n\n  /** Creates a copy of this selection **/\n  clone = opt_props => {\n    // Deep-clone\n    const cloned = new Selection();\n    cloned.underlying = JSON.parse(JSON.stringify(this.underlying));  \n\n    if (opt_props)\n      cloned.underlying = { ...cloned.underlying, ...opt_props };\n\n    return cloned;\n  }\n\n  get type() {\n    return this.underlying.type;\n  }\n\n  get body() {\n    return this.underlying.body;\n  }\n\n  get target() {\n    return this.underlying.target;\n  }\n\n  get targets() {\n    return (Array.isArray(this.underlying.target)) ?\n      this.underlying.target : [ this.underlying.target ];\n  }\n\n  /** For consistency with WebAnnotation **/\n  isEqual(other) {\n    if (!other) {\n      return false;\n    } else {\n      return equals(this.underlying, other.underlying);\n    }\n  }\n  \n  get bodies() {\n    return (Array.isArray(this.underlying.body)) ?\n      this.underlying.body : [ this.underlying.body ];\n  }\n\n  selector = type => {\n    const { target } = this.underlying;\n\n    if (target.selector) {\n      // Normalize to array\n      const selectors = Array.isArray(target.selector) ?\n        target.selector : [ target.selector ];\n\n      return selectors.find(s => s.type === type);\n    }\n  }\n\n  /** Shorthand for the 'exact' field of the TextQuoteSelector **/\n  get quote() {\n    return this.selector('TextQuoteSelector').exact;\n  }\n\n  /*******************************************/ \n  /* Selection-specific properties & methods */\n  /*******************************************/\n\n  get isSelection() {\n    return true;\n  }\n\n  toAnnotation = () => {\n    const a = Object.assign({}, this.underlying, {\n      '@context': 'http://www.w3.org/ns/anno.jsonld',\n      'type': 'Annotation',\n      'id': `#${uuid()}`\n    });\n\n    return new WebAnnotation(a);\n  }\n\n}","import EventEmitter from 'tiny-emitter';\nimport { isTouchDevice } from '../util/Touch';\nimport { SVG_NAMESPACE } from '../util/SVG';\n\nconst IMPLEMENTATION_MISSING = \"An implementation is missing\";\n\nconst isTouch = isTouchDevice();\n\n/**\n * A commmon base class for Tools and EditableShapes\n */\nexport class ToolLike extends EventEmitter {\n\n  constructor(g, config, env) {\n    super();\n\n    this.svg = g.closest('svg');\n\n    this.g = g;\n    this.config = config;\n    this.env = env;\n  }\n\n  getSVGPoint = evt => {\n    const pt = this.svg.createSVGPoint();\n\n    if (isTouch) {\n      const bbox = this.svg.getBoundingClientRect();\n\n      const x = evt.clientX - bbox.x;\n      const y = evt.clientY - bbox.y;\n\n      const { left, top } = this.svg.getBoundingClientRect();\n      pt.x = x + left;\n      pt.y = y + top;\n\n      return pt.matrixTransform(this.g.getScreenCTM().inverse());\n    } else {\n      pt.x = evt.offsetX;\n      pt.y = evt.offsetY;\n\n      return pt.matrixTransform(this.g.getCTM().inverse());\n    }\n  }\n\n  drawHandle = (x, y) => {\n    const containerGroup = document.createElementNS(SVG_NAMESPACE, 'g');\n    containerGroup.setAttribute('class', 'a9s-handle');\n\n    const group = document.createElementNS(SVG_NAMESPACE, 'g');\n\n    const drawCircle = r => {\n      const c = document.createElementNS(SVG_NAMESPACE, 'circle');\n      c.setAttribute('cx', x);\n      c.setAttribute('cy', y);\n      c.setAttribute('r', r);\n      return c;\n    }\n\n    const radius = this.config.handleRadius || 6;\n\n    const inner = drawCircle(radius);\n    inner.setAttribute('class', 'a9s-handle-inner')\n\n    const outer = drawCircle(radius + 1);\n    outer.setAttribute('class', 'a9s-handle-outer')\n\n    group.appendChild(outer);\n    group.appendChild(inner);\n\n    containerGroup.appendChild(group);\n    return containerGroup;\n  }\n\n  setHandleXY = (handle, x, y) => {\n    const inner = handle.querySelector('.a9s-handle-inner');\n    inner.setAttribute('cx', x);\n    inner.setAttribute('cy', y);\n\n    const outer = handle.querySelector('.a9s-handle-outer');\n    outer.setAttribute('cx', x);\n    outer.setAttribute('cy', y);\n  }\n\n  getHandleXY = handle => {\n    const outer = handle.querySelector('.a9s-handle-outer');\n    return {\n      x: parseFloat(outer.getAttribute('cx')),\n      y: parseFloat(outer.getAttribute('cy'))\n    }\n  }\n\n  scaleHandles = scale => {\n    this.handles?.forEach(handle => {\n      const inner = handle.querySelector('.a9s-handle-inner');\n      const outer = handle.querySelector('.a9s-handle-outer');\n\n      const radius = scale * (this.config.handleRadius || 6);\n\n      inner.setAttribute('r', radius);\n      outer.setAttribute('r', radius);\n    });\n  }\n\n}\n\n/**\n * Base class that adds some convenience stuff for tool plugins.\n */\nexport default class Tool extends ToolLike {\n\n  constructor(g, config, env) {\n    super(g, config, env);\n\n    // We'll keep a flag set to false until\n    // the user has started moving, so we can\n    // fire the startSelection event\n    this.started = false;\n  }\n\n  attachListeners = ({ mouseMove, mouseUp, dblClick }) => {\n    // Handle SVG conversion on behalf of tool implementations\n    if (mouseMove) {\n      this.mouseMove = evt => {\n        const { x , y } = this.getSVGPoint(evt);\n\n        if (!this.started) {\n          this.emit('startSelection', { x, y });\n          this.started = true;\n        }\n\n        mouseMove(x, y, evt);\n      }\n\n      // Mouse move goes on SVG element\n      this.svg.addEventListener('mousemove', this.mouseMove);\n    }\n\n    if (mouseUp) {\n      this.mouseUp = evt => {\n        if (evt.button !== 0) return;  // left click\n        const { x , y } = this.getSVGPoint(evt);\n        mouseUp(x, y, evt);\n      }\n\n      // Mouse up goes on doc, so we capture events outside, too\n      document.addEventListener('mouseup', this.mouseUp);\n    }\n\n    if (dblClick) {\n      this.dblClick = evt => {\n        const { x , y } = this.getSVGPoint(evt);\n        dblClick(x, y, evt);\n      }\n\n      this.svg.addEventListener('dblclick', this.dblClick);\n    }\n\n  }\n\n  detachListeners = () => {\n    if (this.mouseMove)\n      this.svg.removeEventListener('mousemove', this.mouseMove);\n\n    if (this.mouseUp)\n      document.removeEventListener('mouseup', this.mouseUp);\n\n    if (this.dblClick)\n      this.svg.removeEventListener('dblclick', this.dblClick);\n  }\n\n  start = evt => {\n    // Handle SVG conversion on behalf of tool implementations\n    const { x , y } = this.getSVGPoint(evt);\n    this.startDrawing(x, y, evt);\n  }\n\n  /**\n   * Tool implementations MUST override these\n   */\n\n  get isDrawing() {\n    throw new Error(IMPLEMENTATION_MISSING);\n  }\n\n  startDrawing = evt => {\n    throw new Error(IMPLEMENTATION_MISSING);\n  }\n\n  createEditableShape = annotation => {\n    throw new Error(IMPLEMENTATION_MISSING);\n  }\n\n}\n\n// In addition, Tool implementations need to implement the following static methods\n\n// Tool.identifier = '...'\n\nTool.supports = annotation => {\n  throw new Error(IMPLEMENTATION_MISSING);\n}\n\n// Just some convenience shortcuts to client-core, for quicker\n// importing in plugins. (In a way, the intention is to make the\n// Tool class serve as a kind of mini-SDK).\nexport { default as Selection } from '@recogito/recogito-client-core/src/Selection';\nexport { default as WebAnnotation } from '@recogito/recogito-client-core/src/WebAnnotation';\n","const SIM_EVENTS = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup'\n}\n\nexport const isTouchDevice = () =>\n  'ontouchstart' in window ||\n    navigator.maxTouchPoints > 0 ||\n      navigator.msMaxTouchPoints > 0;\n\nexport const enableTouchTranslation = el => {\n\n  let pressAndHoldTrigger = null;\n\n  const simulateEvent = (type, e) => new MouseEvent(type, {\n    screenX: e.screenX,\n    screenY: e.screenY,\n    clientX: e.clientX,\n    clientY: e.clientY,\n    pageX: e.pageX,\n    pageY: e.pageY,\n    bubbles: true\n  });\n\n  const touchHandler = evt => {\n    const touch = evt.changedTouches[0];\n    const simulatedEvent = simulateEvent(SIM_EVENTS[evt.type], touch);\n\n    touch.target.dispatchEvent(simulatedEvent);\n    evt.preventDefault();\n\n    if (evt.type === 'touchstart' || evt.type === 'touchmove') {\n      pressAndHoldTrigger && clearTimeout(pressAndHoldTrigger);\n\n      pressAndHoldTrigger = setTimeout(() => {\n        const simulatedEvent = simulateEvent('dblclick', touch);\n        touch.target.dispatchEvent(simulatedEvent);\n      }, 800);\n    }\n\n    if (evt.type === 'touchend')\n      pressAndHoldTrigger && clearTimeout(pressAndHoldTrigger);\n  }\n\n  el.addEventListener('touchstart', touchHandler, true);\n  el.addEventListener('touchmove', touchHandler, true);\n  el.addEventListener('touchend', touchHandler, true);\n  el.addEventListener('touchcancel', touchHandler, true);\n\n}","import { SVG_NAMESPACE } from '../util/SVG';\n\n/** Helper that forces an un-namespaced node to SVG **/\nconst insertSVGNamespace = originalDoc => {\n  // Serialize and parse for the namespace to take effect on every node\n  const serializer = new XMLSerializer();\n  const str = serializer.serializeToString(originalDoc.documentElement);\n\n  // Doesn't seem that there's a clean cross-browser way for this...\n  const namespaced = str.replace('<svg>', `<svg xmlns=\"${SVG_NAMESPACE}\">`);\n\n  const parser = new DOMParser();\n  const namespacedDoc = parser.parseFromString(namespaced, \"image/svg+xml\");\n  return namespacedDoc.documentElement;\n}\n\nconst sanitize = doc => {\n  // Cf. https://github.com/mattkrick/sanitize-svg#readme  \n  // for the basic approach\n  const cleanEl = el => {\n    Array.from(el.attributes).forEach(attr => {\n      if (attr.name.startsWith('on'))\n        el.removeAttribute(attr.name)\n    });\n  }\n\n  // Remove script tags\n  const scripts = doc.getElementsByTagName('script');\n  Array.from(scripts).reverse().forEach(el =>\n    el.parentNode.removeChild(el));\n\n  // Remove on... attributes\n  cleanEl(doc);\n  Array.from(doc.querySelectorAll('*')).forEach(cleanEl);\n\n  return doc;\n}\n\nexport const svgFragmentToShape = annotation => {\n  const selector = annotation.selector('SvgSelector');\n  if (selector) {\n    const parser = new DOMParser();\n\n    // Parse the XML document, assuming SVG\n    const { value } = selector;\n    const doc = parser.parseFromString(value, \"image/svg+xml\");\n\n    // SVG needs a namespace declaration - check if it's set or insert if not\n    const isPrefixDeclared = doc.lookupPrefix(SVG_NAMESPACE); // SVG declared via prefix\n    const isDefaultNamespaceSVG = doc.lookupNamespaceURI(null); // SVG declared as default namespace\n\n    if (isPrefixDeclared || isDefaultNamespaceSVG) {\n      return sanitize(doc).firstChild;\n    } else {\n      return sanitize(insertSVGNamespace(doc)).firstChild;\n    }\n  }\n}\n\nexport const drawEmbeddedSVG = annotation => {\n  const shape = svgFragmentToShape(annotation);\n\n  // Because we're nitpicky, we don't just draw the shape,\n  // but duplicate it, so we can have inner and an outer lines\n  const g = document.createElementNS(SVG_NAMESPACE, 'g');\n\n  const inner = shape.cloneNode(true);\n  inner.setAttribute('class', 'a9s-inner');\n\n  const outer = shape.cloneNode(true);\n  outer.setAttribute('class', 'a9s-outer');\n\n  g.appendChild(outer);\n  g.appendChild(inner);\n\n  return g;\n}\n\nexport const toSVGTarget = (shape, image) => {\n  const inner = shape.querySelector('.a9s-inner').cloneNode(true);\n  inner.removeAttribute('class');\n  inner.removeAttribute('xmlns');\n\n  let serialized = inner.outerHTML || new XMLSerializer().serializeToString(inner);\n  serialized = serialized.replace(` xmlns=\"${SVG_NAMESPACE}\"`, '');\n\n  return {\n    source: image.src,\n    selector: {\n      type: \"SvgSelector\",\n      value: `<svg>${serialized}</svg>`\n    }\n  }\n}\n\nexport const svgArea = annotation => {\n  const shape = svgFragmentToShape(annotation);\n  const nodeName = shape.nodeName.toLowerCase();\n\n  if (nodeName === 'polygon') \n    return polygonArea(shape);\n  else if (nodeName === 'circle')\n    return circleArea(shape);\n  else if (nodeName === 'ellipse')\n    return ellipseArea(shape);\n  else if (nodeName == 'path')\n    return pathArea(shape);\n  else\n    throw `Unsupported SVG shape type: ${nodeName}`;\n}\n\nconst polygonArea = polygon => {\n  const points = polygon.getAttribute('points')\n    .split(' ') // Split x/y tuples\n    .map(xy => xy.split(',').map(str => parseFloat(str.trim())));\n\n  let area = 0;\n  let j = points.length - 1;\n\n  for (let i=0; i < points.length; i++) {\n    area += (points[j][0] + points[i][0]) * (points[j][1] - points[i][1]);\n    j = i;\n  }\n\n  return Math.abs(0.5 * area);\n}\n\nconst circleArea = circle => {\n  const r = circle.getAttribute('r');\n  return r * r * Math.PI;\n}\n\nconst ellipseArea = ellipse => {\n  const rx = ellipse.getAttribute('rx');\n  const ry = ellipse.getAttribute('ry');\n  return rx * ry * Math.PI;\n}\n\nconst pathArea = path => {\n  const pointList = path.getAttribute('d').split('L');\n  let area = 0;\n\n  if(pointList.length > 1) {\n    var point = pointList[pointList.length - 1].trim().split(' ');\n    let lastX = parseFloat(point[0]);\n    let lastY = parseFloat(point[1]);\n\n    point = pointList[0].substring(1).trim().split(' ');\n    let x = parseFloat(point[0]);\n    let y = parseFloat(point[1]);\n    area += (lastX + x) * (lastY - y);\n    lastX = x;\n    lastY = y;\n\n    for (let i = 1; i < pointList.length; i++) {\n      point = pointList[i].trim().split(' ');\n      x = parseFloat(point[0]);\n      y = parseFloat(point[1]);\n      area += (lastX + x) * (lastY - y);\n      lastX = x;\n      lastY = y;\n    }\n  }\n\n  return Math.abs(0.5 * area);\n}","import { SVG_NAMESPACE } from '@recogito/annotorious/src/util/SVG';\n\n/** Shorthand to apply the given (x, y, r) to the SVG shape **/\nconst setXYR = (shape, x, y, r) => {  \n  shape.setAttribute('cx', x);\n  shape.setAttribute('cy', y);\n  shape.setAttribute('r', r);\n}\n\n/** \n * Draws an SVG circle, either from an annotation, or an\n * (cx, cy, r)-tuple.\n */\nexport const drawCircle = (cx, cy, r) => {\n  const g = document.createElementNS(SVG_NAMESPACE, 'g');\n  const outerCircle  = document.createElementNS(SVG_NAMESPACE, 'circle');\n  const innerCircle  = document.createElementNS(SVG_NAMESPACE, 'circle');\n\n  innerCircle.setAttribute('class', 'a9s-inner');\n  setXYR(innerCircle, cx, cy, r);\n\n  outerCircle.setAttribute('class', 'a9s-outer');\n  setXYR(outerCircle, cx, cy, r);\n\n  g.appendChild(outerCircle);\n  g.appendChild(innerCircle);\n\n  return g;\n}\n\nexport const setCircleSize = (g, cx, cy, r) => {\n  const innerCircle = g.querySelector('.a9s-inner');\n  const outerCircle = g.querySelector('.a9s-outer');\n  \n  setXYR(innerCircle, cx, cy, r);\n  setXYR(outerCircle, cx, cy, r);\n}\n\nexport const getCircleSize = g => {\n  const outerCircle = g.querySelector('.a9s-outer');\n\n  const cx = parseFloat(outerCircle.getAttribute('cx'));\n  const cy = parseFloat(outerCircle.getAttribute('cy'));\n  const r = parseFloat(outerCircle.getAttribute('r'));\n  \n  return { cx, cy, r };\n}","import { SVG_NAMESPACE } from '@recogito/annotorious/src/util/SVG';\nimport { getCircleSize } from './Circle';\n\nexport default class CircleMask {\n\n  constructor(imageDimensions, circle) {\n    this.w = imageDimensions.naturalWidth;\n    this.h = imageDimensions.naturalHeight;\n\n    this.circle = circle;\n\n    const { cx, cy, r } = getCircleSize(this.circle);\n    const tx = ((cx + r) > this.w) ? this.w - r : cx;\n    const ty = ((cy + r) > this.h) ? this.h - r : cy + r;\n\n    this.mask = document.createElementNS(SVG_NAMESPACE, 'path');\n    this.mask.setAttribute('fill-rule', 'evenodd');    \n    this.mask.setAttribute('class', 'a9s-selection-mask');\n\n    this.mask.setAttribute('d', `M0 0 h${this.w} v${this.h} h-${this.w} z M${tx} ${ty} a ${r} ${r} 0 1 1 1 0`);\n  }\n\n  redraw = () => {\n    const { cx, cy, r } = getCircleSize(this.circle);\n\n    const tx = ((cx + r) > this.w) ? this.w - r : cx;\n    const ty = ((cy + r) > this.h) ? this.h - r : cy + r;\n\n    this.mask.setAttribute('d', `M0 0 h${this.w} v${this.h} h-${this.w} z M${tx} ${ty} a ${r} ${r} 0 1 1 1 0`);\n  }\n\n  get element() {\n    return this.mask;\n  }\n\n  destroy = () =>\n    this.mask.parentNode.removeChild(this.mask)\n\n}","import { Selection } from '@recogito/annotorious/src/tools/Tool';\nimport { toSVGTarget } from '@recogito/annotorious/src/selectors/EmbeddedSVG';\nimport { SVG_NAMESPACE } from '@recogito/annotorious/src/util/SVG';\nimport { drawCircle, setCircleSize } from './Circle';\nimport Mask from './CircleMask';\n\n/**\n * A 'rubberband' selection tool for creating a circle by\n * clicking and dragging.\n */\nexport default class RubberbandCircle {\n\n  constructor(anchorX, anchorY, g, env) {\n    this.anchor = [ anchorX, anchorY ];\n\n    this.env = env;\n\n    this.group = document.createElementNS(SVG_NAMESPACE, 'g');\n\n    this.circle = drawCircle(anchorX, anchorY, 2);\n    this.circle.setAttribute('class', 'a9s-selection');\n\n    this.mask = new Mask(env.image, this.circle);\n\n    // We make the selection transparent to \n    // pointer events because it would interfere with the \n    // rendered annotations' mouseleave/enter events\n    this.group.style.pointerEvents = 'none';\n\n    // Additionally, selection remains hidden until \n    // the user actually moves the mouse\n    this.group.style.display = 'none';\n\n    this.group.appendChild(this.mask.element);\n    this.group.appendChild(this.circle);\n\n    g.appendChild(this.group);\n  }\n\n  get element() {\n    return this.circle;\n  }\n\n  dragTo = (oppositeX, oppositeY) => {\n    const { naturalWidth, naturalHeight } = this.env.image;\n\n    // Make visible\n    this.group.style.display = null;\n\n    const w = oppositeX - this.anchor[0];\n    const h = oppositeY - this.anchor[1];\n    const r = Math.max(1, Math.pow(w ** 2 + h ** 2, 0.5) / 2);\n\n    const cx = this.anchor[0] + w / 2;\n    const cy = this.anchor[1] + h / 2;\n\n    if ((cx-r < 0 || cx + r > naturalWidth) || (cy-r < 0 || cy + r > naturalHeight)) return;\n    \n    setCircleSize(this.circle, cx, cy, r);\n    this.mask.redraw();\n  }\n\n  getBoundingClientRect = () => \n    this.circle.getBoundingClientRect();\n\n  toSelection = () => {\n    return new Selection(toSVGTarget(this.group, this.env.image));\n  }\n\n  destroy = () => {\n    this.group.parentNode.removeChild(this.group);\n\n    this.mask = null;\n    this.circle = null;\n    this.group = null;\n  }\n\n}","import { ToolLike } from './Tool';\n\nconst IMPLEMENTATION_MISSING = \"An implementation is missing\";\n\nexport default class EditableShape extends ToolLike {\n\n  constructor(annotation, g, config, env) {\n    super(g, config, env);\n\n    this.annotation = annotation;\n\n    // Implementations need to override the handles list\n    this.handles = [];\n\n    // Bit of a hack. If we are dealing with a 'real' image, we enable\n    // reponsive mode. OpenSeadragon handles scaling in a different way,\n    // so we don't need responsive mode.\n    const { image } = env;\n    if (image instanceof Element || image instanceof HTMLDocument)\n      this.enableResponsive();\n  }\n\n  enableResponsive = () => {\n    if (window.ResizeObserver) {\n      this.resizeObserver = new ResizeObserver(() => {\n        const svgBounds = this.svg.getBoundingClientRect();\n        const { width, height } = this.svg.viewBox.baseVal;\n\n        const scale = Math.max(\n          width / svgBounds.width,\n          height / svgBounds.height\n        );\n\n        this.scaleHandles(scale);\n      });\n\n      this.resizeObserver.observe(this.svg.parentNode);\n    }\n  }\n\n  // Implementations MUST override theis method\n  get element() {\n    throw new Error(IMPLEMENTATION_MISSING);\n  }\n\n  // Implementations can extend this (calling super)\n  destroy() {\n    if (this.resizeObserver)\n      this.resizeObserver.disconnect();\n\n    this.resizeObserver = null;\n  }\n\n}\n","import { addClass, SVG_NAMESPACE } from './SVG';\n\nconst appendFormatterEl = (formatterEl, shape) => {\n  const { x, y, width, height } = shape.getBBox();\n\n  const svgEl = document.createElementNS(SVG_NAMESPACE, 'svg');\n  svgEl.setAttribute('class', 'a9s-formatter-el');\n  svgEl.setAttribute('x', x);\n  svgEl.setAttribute('y', y);\n  svgEl.setAttribute('width', width);\n  svgEl.setAttribute('height', height);\n\n  const g = document.createElementNS(SVG_NAMESPACE, 'g');\n  g.appendChild(formatterEl);y\n\n  svgEl.appendChild(g);\n  \n  shape.append(svgEl);\n}\n\n/**\n * A formatter is a user-defined function that takes an annotation as input,\n * and returns either a string, or an object. If a string is returned, this\n * will be appended to the annotation element CSS class list. Otherwise, the\n * object can have the following properties: \n * \n * - 'className' added to the CSS class list\n * - 'data-*' added as data attributes\n * - 'style' a list of CSS styles (in the form of a string) \n */\nexport const format = (shape, annotation, formatter) => {\n  // The formatter can be undefined\n  if (!formatter)\n    return shape;\n\n  const format = formatter(annotation);\n\n  // The formatter is allowed to return null\n  if (!format)\n    return shape;\n\n  if (typeof format === 'string' || format instanceof String) {\n    // Apply CSS class\n    addClass(shape, format); \n  } else if (format.nodeType === Node.ELEMENT_NODE) {\n    appendFormatterEl(format, shape);\n  } else {\n    const { className, style, element } = format;\n\n    if (className)\n      addClass(shape, className);\n\n    if (style) {\n      const outer = shape.querySelector('.a9s-outer');\n      const inner = shape.querySelector('.a9s-inner');\n\n      if (outer && inner) {\n        outer.setAttribute('style', 'display:none');\n        inner.setAttribute('style', style);\n      } else {\n        shape.setAttribute('style', style);\n      }\n    }\n\n    if (element)\n      appendFormatterEl(element, shape);\n\n    for (const key in format) {\n      if (format.hasOwnProperty(key) && key.startsWith('data-')) {\n        shape.setAttribute(key, format[key]);\n      }\n    }\n  }\n}\n\nexport const setFormatterElSize = (group, x, y, w, h) => {\n  const formatterEl = group.querySelector('.a9s-formatter-el');\n\n  if (formatterEl) {\n    formatterEl.setAttribute('x', x);\n    formatterEl.setAttribute('y', y);\n    formatterEl.setAttribute('width', w);\n    formatterEl.setAttribute('height', h);\n  }\n}","import EditableShape from '@recogito/annotorious/src/tools/EditableShape';\nimport { drawEmbeddedSVG, svgFragmentToShape, toSVGTarget } from '@recogito/annotorious/src/selectors/EmbeddedSVG';\nimport { SVG_NAMESPACE } from '@recogito/annotorious/src/util/SVG';\nimport { format, setFormatterElSize } from '@recogito/annotorious/src/util/Formatting';\nimport { getCircleSize, setCircleSize } from './Circle';\nimport Mask from './CircleMask';\n\n/**\n * An editable circle shape.\n */\nexport default class EditableCircle extends EditableShape {\n\n  constructor(annotation, g, config, env) {\n    super(annotation, g, config, env);\n\n    this.svg.addEventListener('mousemove', this.onMouseMove);\n    this.svg.addEventListener('mouseup', this.onMouseUp);\n\n    // SVG markup for this class looks like this:\n    // \n    // <g>\n    //   <path class=\"a9s-selection mask\"... />\n    //   <g> <-- return this node as .element\n    //     <circle class=\"a9s-outer\" ... />\n    //     <circle class=\"a9s-inner\" ... />\n    //     <g class=\"a9s-handle\" ...> ... </g>\n    //     <g class=\"a9s-handle\" ...> ... </g>\n    //     <g class=\"a9s-handle\" ...> ... </g>\n    //     <g class=\"a9s-handle\" ...> ... </g>\n    //   </g> \n    // </g>\n\n    // 'g' for the editable circle compound shape\n    this.containerGroup = document.createElementNS(SVG_NAMESPACE, 'g');\n\n    this.circle = drawEmbeddedSVG(annotation);\n    this.circle.querySelector('.a9s-inner')\n      .addEventListener('mousedown', this.onGrab(this.circle));\n\n    this.mask = new Mask(env.image, this.circle);\n\n    this.containerGroup.appendChild(this.mask.element);\n\n    // The 'element' = circle + handles\n    this.elementGroup = document.createElementNS(SVG_NAMESPACE, 'g');\n    this.elementGroup.setAttribute('class', 'a9s-annotation editable selected');\n    this.elementGroup.appendChild(this.circle);    \n\n    const { cx, cy, r } = getCircleSize(this.circle);\n\n    this.handles = [\n      [ cx, cy - r ],\n      [ cx + r, cy ],\n      [ cx, cy + r ],\n      [ cx - r, cy ]\n    ].map(t => { \n      const [ x, y ] = t;\n      const handle = this.drawHandle(x, y);\n\n      handle.addEventListener('mousedown', this.onGrab(handle));\n      this.elementGroup.appendChild(handle);\n\n      return handle;\n    });\n\n    this.containerGroup.appendChild(this.elementGroup);\n    g.appendChild(this.containerGroup);\n\n    format(this.circle, annotation, config.formatter);\n\n    // The grabbed element (handle or entire group), if any\n    this.grabbedElem = null; \n\n    // Mouse xy offset inside the shape, if mouse pressed\n    this.grabbedAt = null;\n  }\n\n  setSize = (cx, cy, r) => {\n    setCircleSize(this.circle, cx, cy, r);\n    this.mask.redraw();\n    setFormatterElSize(this.elementGroup, cx, cy, r, r);\n\n    const [ topleft, topright, bottomright, bottomleft] = this.handles;\n    this.setHandleXY(topleft, cx, cy - r);\n    this.setHandleXY(topright, cx + r, cy);\n    this.setHandleXY(bottomright, cx, cy + r);\n    this.setHandleXY(bottomleft, cx - r, cy);\n  }\n\n  stretchCorners = (draggedHandleIdx, anchorHandle, mousePos) => {\n    const anchor = this.getHandleXY(anchorHandle);\n\n    var mouseX = mousePos.x;\n    var mouseY = mousePos.y;\n    var width = 0;\n    var height = 0;\n    var r;\n    if (draggedHandleIdx == 0 || draggedHandleIdx == 2) {\n      mouseX = anchor.x;\n      height = mouseY - anchor.y;\n      r = Math.abs(height) / 2;\n    } else {\n      mouseY = anchor.y;\n      width = mouseX - anchor.x;\n      r = Math.abs(width) / 2;\n    }\n\n    const x = width > 0 ? anchor.x : mouseX;\n    const y = height > 0 ? anchor.y : mouseY;\n    const w = Math.abs(width);\n    const h = Math.abs(height);\n    const cx = x + w/2;\n    const cy = y + h/2;\n\n    setCircleSize(this.circle, cx, cy, r);\n    this.mask.redraw();\n    setFormatterElSize(this.elementGroup, cx, cy, r, r);\n\n    if (draggedHandleIdx == 0 || draggedHandleIdx == 2) {\n      var idx0 = 0;\n      var idx2 = 2;\n      if(draggedHandleIdx == 0 && height > 0 || draggedHandleIdx == 2 && height < 0) {\n        idx0 = 2;\n        idx2 = 0;\n      }\n      this.setHandleXY(this.handles[idx0], cx, cy - r);\n      this.setHandleXY(this.handles[idx2], cx, cy + r);\n      this.setHandleXY(this.handles[1], cx + r, cy);\n      this.setHandleXY(this.handles[3], cx - r, cy);\n    } else {\n      var idx3 = 3;\n      var idx1 = 1;\n      if (draggedHandleIdx == 1 && width > 0 || draggedHandleIdx == 3 && width < 0) {\n        idx3 = 1;\n        idx1 = 3;\n      }\n      this.setHandleXY(this.handles[idx3], cx + r, cy);\n      this.setHandleXY(this.handles[idx1], cx - r, cy);\n      this.setHandleXY(this.handles[0], cx, cy - r);\n      this.setHandleXY(this.handles[2], cx, cy + r);\n    }\n  }\n\n  onGrab = grabbedElem => evt => {\n    this.grabbedElem = grabbedElem; \n    \n    const pos = this.getSVGPoint(evt);\n    const { cx, cy } = getCircleSize(this.circle);\n    \n    this.grabbedAt = { x: pos.x - cx, y: pos.y - cy };\n  }\n\n  onMouseMove = evt => {\n    const constrain = (coord, max) =>\n      coord < 0 ? 0 : ( coord > max ? max : coord);\n\n    if (this.grabbedElem) {\n      const pos = this.getSVGPoint(evt);\n\n      if (this.grabbedElem === this.circle) {\n        const { r } = getCircleSize(this.circle);\n\n        const { naturalWidth, naturalHeight } = this.env.image;\n\n        const cx = Math.max(constrain(pos.x - this.grabbedAt.x, naturalWidth - r), r);\n        const cy = Math.max(constrain(pos.y - this.grabbedAt.y, naturalHeight - r), r);\n\n        this.setSize(cx, cy, r); \n        this.emit('update', toSVGTarget(this.circle, this.env.image)); \n      } else {\n        // Mouse position replaces one of the corner coords, depending\n        // on which handle is the grabbed element\n        const handleIdx = this.handles.indexOf(this.grabbedElem);\n        const oppositeHandle = handleIdx < 2 ? \n          this.handles[handleIdx + 2] : this.handles[handleIdx - 2];\n\n        this.stretchCorners(handleIdx, oppositeHandle, pos);\n        this.emit('update', toSVGTarget(this.circle, this.env.image));\n      }\n    }\n  }\n\n  onMouseUp = () => {\n    this.grabbedElem = null;\n    this.grabbedAt = null;\n  }\n\n  get element() { \n    return this.elementGroup; \n  }\n\n  updateState = annotation => {\n    const shape = svgFragmentToShape(annotation);\n\n    const cx = parseFloat(shape.getAttribute('cx'));\n    const cy = parseFloat(shape.getAttribute('cy'));\n    const r =  parseFloat(shape.getAttribute('r'));\n\n    this.setSize(cx, cy, r);\n  }\n\n  destroy() {\n    this.containerGroup.parentNode.removeChild(this.containerGroup);\n    super.destroy();\n  }\n\n}\n","import Tool from '@recogito/annotorious/src/tools/Tool';\nimport RubberbandCircle from './RubberbandCircle';\nimport EditableCircle from './EditableCircle';\n\n/**\n * A rubberband selector for circle selections.\n */\nexport default class RubberbandCircleTool extends Tool {\n\n  constructor(g, config, env) {\n    super(g, config, env);\n\n    this.rubberband = null;\n  }\n\n  startDrawing = (x, y) => {\n    this.attachListeners({\n      mouseMove: this.onMouseMove,\n      mouseUp: this.onMouseUp\n    });\n\n    this.rubberband = new RubberbandCircle(x, y, this.g, this.env);\n  }\n\n  stop = () => {\n    if (this.rubberband) {\n      this.rubberband.destroy();\n      this.rubberband = null;\n    }\n  }\n\n  onMouseMove = (x, y) =>\n    this.rubberband.dragTo(x, y);\n  \n  onMouseUp = () => {\n    this.detachListeners();\n    this.started = false;\n\n    const { width, height } = this.rubberband.getBoundingClientRect();\n\n    const minWidth = this.config.minSelectionWidth || 4;\n    const minHeight = this.config.minSelectionHeight || 4;\n\n    if (width >= minWidth && height >= minHeight) {\n      // Emit the SVG shape with selection attached    \n      const { element } = this.rubberband;\n      element.annotation = this.rubberband.toSelection();\n\n      // Emit the completed shape...\n      this.emit('complete', element);\n    } else {\n      this.emit('cancel');\n    }\n\n    this.stop();\n  }\n\n  get isDrawing() {\n    return this.rubberband != null;\n  }\n  \n  createEditableShape = annotation =>\n    new EditableCircle(annotation, this.g, this.config, this.env);\n\n}\n\nRubberbandCircleTool.identifier = 'circle';\n\nRubberbandCircleTool.supports = annotation => {\n  const selector = annotation.selector('SvgSelector');\n  if (selector)\n    return selector.value?.match(/^<svg.*<circle/g);\n}","import { SVG_NAMESPACE } from '@recogito/annotorious/src/util/SVG';\n\n/** Shorthand to apply the given (x, y, rx, ry) to the SVG shape **/\nconst setXYR = (shape, x, y, rx, ry) => {  \n  shape.setAttribute('cx', x);\n  shape.setAttribute('cy', y);\n  shape.setAttribute('rx', rx);\n  shape.setAttribute('ry', ry);\n}\n\n/** \n * Draws an SVG ellipse, either from an annotation, or an\n * (cx, cy, rx, ry)-tuple.\n */\nexport const drawEllipse = (cx, cy, rx, ry) => {\n  const g = document.createElementNS(SVG_NAMESPACE, 'g');\n  const innerEllipse  = document.createElementNS(SVG_NAMESPACE, 'ellipse');\n  const outerEllipse  = document.createElementNS(SVG_NAMESPACE, 'ellipse');\n\n  innerEllipse.setAttribute('class', 'a9s-inner');\n  setXYR(innerEllipse, cx, cy, rx, ry);\n\n  outerEllipse.setAttribute('class', 'a9s-outer');\n  setXYR(outerEllipse, cx, cy, rx, ry);\n\n  g.appendChild(outerEllipse);\n  g.appendChild(innerEllipse);\n\n  return g;\n}\n\nexport const setEllipseSize = (g, cx, cy, rx, ry) => {\n  const innerEllipse = g.querySelector('.a9s-inner');\n  const outerEllipse = g.querySelector('.a9s-outer');\n\n  setXYR(innerEllipse, cx, cy, rx, ry);\n  setXYR(outerEllipse, cx, cy, rx, ry);\n}\n\nexport const getEllipseSize = g => {\n  const outerEllipse = g.querySelector('.a9s-outer');\n\n  const cx = parseFloat(outerEllipse.getAttribute('cx'));\n  const cy = parseFloat(outerEllipse.getAttribute('cy'));\n  const rx = parseFloat(outerEllipse.getAttribute('rx'));\n  const ry = parseFloat(outerEllipse.getAttribute('ry'));\n  \n  return { cx, cy, rx, ry };\n}","import { SVG_NAMESPACE } from '@recogito/annotorious/src/util/SVG';\nimport { getEllipseSize } from './Ellipse';\n\nexport default class EllipseMask {\n\n  constructor(imageDimensions, ellipse) {\n    this.w = imageDimensions.naturalWidth;\n    this.h = imageDimensions.naturalHeight;\n\n    this.ellipse = ellipse;\n\n    const { cx, cy, rx, ry } = getEllipseSize(this.ellipse);\n\n    const ty = cy + ry;\n\n    this.mask = document.createElementNS(SVG_NAMESPACE, 'path');\n    this.mask.setAttribute('fill-rule', 'evenodd');    \n    this.mask.setAttribute('class', 'a9s-selection-mask');\n\n    this.mask.setAttribute('d', `M0 0 h${this.w} v${this.h} h-${this.w} z M${cx} ${ty} a ${rx} ${ry} 0 1 1 1 0`);\n  }\n\n  redraw = () => {\n    const { cx, cy, rx, ry } = getEllipseSize(this.ellipse);\n\n    const ty = cy + ry;\n\n    this.mask.setAttribute('d', `M0 0 h${this.w} v${this.h} h-${this.w} z M${cx} ${ty} a ${rx} ${ry} 0 1 1 1 0`);\n  }\n\n  get element() {\n    return this.mask;\n  }\n\n  destroy = () =>\n    this.mask.parentNode.removeChild(this.mask)\n\n}","import { Selection } from '@recogito/annotorious/src/tools/Tool';\nimport { toSVGTarget } from '@recogito/annotorious/src/selectors/EmbeddedSVG';\nimport { SVG_NAMESPACE } from '@recogito/annotorious/src/util/SVG';\nimport { drawEllipse, setEllipseSize } from './Ellipse';\nimport Mask from './EllipseMask';\n\n/**\n * A 'rubberband' selection tool for creating a ellipse by\n * clicking and dragging.\n */\nexport default class RubberbandEllipse {\n\n  constructor(anchorX, anchorY, g, env) {\n    this.anchor = [ anchorX, anchorY ];\n\n    this.env = env;\n\n    this.group = document.createElementNS(SVG_NAMESPACE, 'g');\n\n    this.ellipse = drawEllipse(anchorX, anchorY, 2);\n    this.ellipse.setAttribute('class', 'a9s-selection');\n\n    this.mask = new Mask(env.image, this.ellipse);\n\n    // We make the selection transparent to \n    // pointer events because it would interfere with the \n    // rendered annotations' mouseleave/enter events\n    this.group.style.pointerEvents = 'none';\n\n    // Additionally, selection remains hidden until \n    // the user actually moves the mouse\n    this.group.style.display = 'none';\n\n    this.group.appendChild(this.mask.element);\n    this.group.appendChild(this.ellipse);\n\n    g.appendChild(this.group);\n  }\n\n  get element() {\n    return this.ellipse;\n  }\n\n  dragTo = (oppositeX, oppositeY) => {\n    // Make visible\n    this.group.style.display = null;\n\n    const w = oppositeX - this.anchor[0];\n    const h = oppositeY - this.anchor[1];\n\n    const cx = w > 0 ? this.anchor[0] + w / 2 : oppositeX + w / 2;\n    const cy = h > 0 ? this.anchor[1] + h / 2 : oppositeY + h / 2;\n\n    const rx = Math.abs(w / 2);\n    const ry = Math.abs(h / 2);\n\n    setEllipseSize(this.ellipse, cx, cy, rx, ry);\n    this.mask.redraw();\n  }\n\n  getBoundingClientRect = () => \n    this.ellipse.getBoundingClientRect();\n\n  toSelection = () => {\n    return new Selection(toSVGTarget(this.group, this.env.image));\n  }\n\n  destroy = () => {\n    this.group.parentNode.removeChild(this.group);\n\n    this.mask = null;\n    this.ellipse = null;\n    this.group = null;\n  }\n\n}","import EditableShape from '@recogito/annotorious/src/tools/EditableShape';\nimport { drawEmbeddedSVG, svgFragmentToShape, toSVGTarget } from '@recogito/annotorious/src/selectors/EmbeddedSVG';\nimport { SVG_NAMESPACE } from '@recogito/annotorious/src/util/SVG';\nimport { format, setFormatterElSize } from '@recogito/annotorious/src/util/Formatting';\nimport { getEllipseSize, setEllipseSize } from './Ellipse';\nimport Mask from './EllipseMask';\n\n/**\n * An editable ellipse shape.\n */\nexport default class EditableEllipse extends EditableShape {\n\n  constructor(annotation, g, config, env) {\n    super(annotation, g, config, env);\n\n    this.svg.addEventListener('mousemove', this.onMouseMove);\n    this.svg.addEventListener('mouseup', this.onMouseUp);\n\n    // SVG markup for this class looks like this:\n    // \n    // <g>\n    //   <path class=\"a9s-selection mask\"... />\n    //   <g> <-- return this node as .element\n    //     <ellipse class=\"a9s-outer\" ... />\n    //     <g class=\"a9s-handle\" ...> ... </g>\n    //     <g class=\"a9s-handle\" ...> ... </g>\n    //     <g class=\"a9s-handle\" ...> ... </g>\n    //     <g class=\"a9s-handle\" ...> ... </g>\n    //   </g> \n    // </g>\n\n    // 'g' for the editable ellipse compound shape\n    this.containerGroup = document.createElementNS(SVG_NAMESPACE, 'g');\n\n    this.ellipse = drawEmbeddedSVG(annotation);\n    this.ellipse.querySelector('.a9s-inner')\n      .addEventListener('mousedown', this.onGrab(this.ellipse));\n\n    this.mask = new Mask(env.image, this.ellipse);\n\n    this.containerGroup.appendChild(this.mask.element);\n\n    // The 'element' = ellipse + handles\n    this.elementGroup = document.createElementNS(SVG_NAMESPACE, 'g');\n    this.elementGroup.setAttribute('class', 'a9s-annotation editable selected');\n    this.elementGroup.appendChild(this.ellipse);    \n\n    const { cx, cy, rx, ry } = getEllipseSize(this.ellipse);\n\n    this.handles = [\n      [ cx, cy - ry ],\n      [ cx + rx, cy ],\n      [ cx, cy + ry ],\n      [ cx - rx, cy ]\n    ].map(t => { \n      const [ x, y ] = t;\n      const handle = this.drawHandle(x, y);\n\n      handle.addEventListener('mousedown', this.onGrab(handle));\n      this.elementGroup.appendChild(handle);\n\n      return handle;\n    });\n\n    this.containerGroup.appendChild(this.elementGroup);\n    g.appendChild(this.containerGroup);\n\n    format(this.ellipse, annotation, config.formatter);\n\n    // The grabbed element (handle or entire group), if any\n    this.grabbedElem = null; \n\n    // Mouse xy offset inside the shape, if mouse pressed\n    this.grabbedAt = null;\n  }\n\n  setSize = (cx, cy, rx, ry) => {\n    setEllipseSize(this.ellipse, cx, cy, rx, ry);\n    this.mask.redraw();\n    setFormatterElSize(this.elementGroup, cx, cy, rx, ry);\n\n    const [ topleft, topright, bottomright, bottomleft] = this.handles;\n    this.setHandleXY(topleft, cx, cy - ry);\n    this.setHandleXY(topright, cx + rx, cy);\n    this.setHandleXY(bottomright, cx, cy + ry);\n    this.setHandleXY(bottomleft, cx - rx, cy);\n  }\n\n  stretchCorners = (draggedHandleIdx, anchorHandle, leftHandle, mousePos) => {\n    const anchor = this.getHandleXY(anchorHandle);\n    const anchorLeft = this.getHandleXY(leftHandle);\n\n    var mouseX = mousePos.x;\n    var mouseY = mousePos.y;\n    var rx = 0;\n    var ry = 0;\n    if(draggedHandleIdx == 0 || draggedHandleIdx == 2) {\n      mouseX = anchor.x;\n    } else {\n      mouseY = anchor.y;\n    }\n\n    const width = mouseX - anchor.x;\n    const height = mouseY - anchor.y;\n    const x = width > 0 ? anchor.x : mouseX;\n    const y = height > 0 ? anchor.y : mouseY;\n    const w = Math.abs(width);\n    const h = Math.abs(height);\n    const cx = x + w/2;\n    const cy = y + h/2;\n    var rx = w/2;\n    var ry = h/2;\n    if(draggedHandleIdx == 0 || draggedHandleIdx == 2) {\n      rx = Math.abs(anchor.x - anchorLeft.x);\n    } else {\n      ry = Math.abs(anchor.y - anchorLeft.y);\n    }\n\n    setEllipseSize(this.ellipse, cx, cy, rx, ry);\n    this.mask.redraw();\n    setFormatterElSize(this.elementGroup, cx, cy, rx, ry);\n\n    if (draggedHandleIdx == 0 || draggedHandleIdx == 2) {\n      var idx0 = 0;\n      var idx2 = 2;\n      if(draggedHandleIdx == 0 && height > 0 || draggedHandleIdx == 2 && height < 0) {\n        idx0 = 2;\n        idx2 = 0;\n      }\n      this.setHandleXY(this.handles[idx0], cx, cy - ry);\n      this.setHandleXY(this.handles[idx2], cx, cy + ry);\n      this.setHandleXY(this.handles[1], cx + rx, cy);\n      this.setHandleXY(this.handles[3], cx - rx, cy);\n    } else {\n      var idx3 = 3;\n      var idx1 = 1;\n      if (draggedHandleIdx == 1 && width > 0 || draggedHandleIdx == 3 && width < 0) {\n        idx3 = 1;\n        idx1 = 3;\n      }\n      this.setHandleXY(this.handles[idx3], cx + rx, cy);\n      this.setHandleXY(this.handles[idx1], cx - rx, cy);\n      this.setHandleXY(this.handles[0], cx, cy - ry);\n      this.setHandleXY(this.handles[2], cx, cy + ry);\n    }\n  }\n\n  onGrab = grabbedElem => evt => {\n    this.grabbedElem = grabbedElem; \n\n    const pos = this.getSVGPoint(evt);\n    const { cx, cy } = getEllipseSize(this.ellipse);\n\n    this.grabbedAt = { x: pos.x - cx, y: pos.y - cy };\n  }\n\n  onMouseMove = evt => {\n    const constrain = (coord, max) =>\n      coord < 0 ? 0 : ( coord > max ? max : coord);\n\n    if (this.grabbedElem) {\n      const pos = this.getSVGPoint(evt);\n\n      if (this.grabbedElem === this.ellipse) {\n        const { rx, ry } = getEllipseSize(this.ellipse);\n\n        const { naturalWidth, naturalHeight } = this.env.image;\n\n        const cx = constrain(pos.x - this.grabbedAt.x, naturalWidth - rx);\n        const cy = constrain(pos.y - this.grabbedAt.y, naturalHeight - ry);\n\n        this.setSize(cx, cy, rx, ry); \n        this.emit('update', toSVGTarget(this.ellipse, this.env.image));\n      } else {\n        // Mouse position replaces one of the corner coords, depending\n        // on which handle is the grabbed element\n        const handleIdx = this.handles.indexOf(this.grabbedElem);\n        const oppositeHandle = handleIdx < 2 ? \n          this.handles[handleIdx + 2] : this.handles[handleIdx - 2];\n        const leftHandle = this.handles[(handleIdx + 3) % 4];\n\n        this.stretchCorners(handleIdx, oppositeHandle, leftHandle, pos);\n        this.emit('update', toSVGTarget(this.ellipse, this.env.image));\n      }\n    }\n  }\n\n  onMouseUp = () => {\n    this.grabbedElem = null;\n    this.grabbedAt = null;\n  }\n\n  get element() { \n    return this.elementGroup; \n  }\n\n  updateState = annotation => {\n    const shape = svgFragmentToShape(annotation);\n\n    const cx = parseFloat(shape.getAttribute('cx'));\n    const cy = parseFloat(shape.getAttribute('cy'));\n    const rx = parseFloat(shape.getAttribute('rx'));\n    const ry = parseFloat(shape.getAttribute('ry'));\n    \n    this.setSize(cx, cy, rx, ry);\n  }\n\n  destroy() {\n    this.containerGroup.parentNode.removeChild(this.containerGroup);\n    super.destroy();\n  }\n\n}","import Tool from '@recogito/annotorious/src/tools/Tool';\nimport RubberbandEllipse from './RubberbandEllipse';\nimport EditableEllipse from './EditableEllipse';\n\n/**\n * A rubberband selector for ellipse selections.\n */\nexport default class RubberbandEllipseTool extends Tool {\n\n  constructor(g, config, env) {\n    super(g, config, env);\n\n    this.rubberband = null;\n  }\n\n  startDrawing = (x, y) => {\n    this.attachListeners({\n      mouseMove: this.onMouseMove,\n      mouseUp: this.onMouseUp\n    });\n\n    this.rubberband = new RubberbandEllipse(x, y, this.g, this.env);\n  }\n\n  stop = () => {\n    if (this.rubberband) {\n      this.rubberband.destroy();\n      this.rubberband = null;\n    }\n  }\n\n  onMouseMove = (x, y) =>\n    this.rubberband.dragTo(x, y);\n  \n  onMouseUp = () => {\n    this.detachListeners();\n    this.started = false;\n\n    const { width, height } = this.rubberband.getBoundingClientRect();\n\n    const minWidth = this.config.minSelectionWidth || 4;\n    const minHeight = this.config.minSelectionHeight || 4;\n\n    if (width >= minWidth && height >= minHeight) {\n      // Emit the SVG shape with selection attached    \n      const { element } = this.rubberband;\n      element.annotation = this.rubberband.toSelection();\n\n      // Emit the completed shape...\n      this.emit('complete', element);\n    } else {\n      this.emit('cancel');\n    }\n\n    this.stop();\n  }\n\n  get isDrawing() {\n    return this.rubberband != null;\n  }\n  \n  createEditableShape = annotation =>\n    new EditableEllipse(annotation, this.g, this.config, this.env);\n\n}\n\nRubberbandEllipseTool.identifier = 'ellipse';\n\nRubberbandEllipseTool.supports = annotation => {\n  const selector = annotation.selector('SvgSelector');\n  if (selector)\n    return selector.value?.match(/^<svg.*<ellipse/g);\n}","import { Selection } from '@recogito/annotorious/src/tools/Tool';\nimport { toSVGTarget } from '@recogito/annotorious/src/selectors/EmbeddedSVG';\nimport { SVG_NAMESPACE } from '@recogito/annotorious/src/util/SVG';\n// TODO optional: mask to dim the outside area\n//import Mask from './FreehandMask';\n\n/**\n * A 'rubberband' selection tool for creating freehand drawing by\n * clicking and dragging.\n */\nexport default class RubberbandFreehand {\n\n  constructor(anchor, g, env) {\n    this.points = [ anchor ];\n\n    this.env = env;\n\n    this.group = document.createElementNS(SVG_NAMESPACE, 'g');\n\n    this.freehand = document.createElementNS(SVG_NAMESPACE, 'g');\n    this.freehand.setAttribute('class', 'a9s-selection');\n\n    this.outer = document.createElementNS(SVG_NAMESPACE, 'path');\n    this.outer.setAttribute('class', 'a9s-outer');\n\n    this.inner = document.createElementNS(SVG_NAMESPACE, 'path');\n    this.inner.setAttribute('class', 'a9s-inner');\n\n    this.setPoints(this.points);\n\n   // TODO optional: mask to dim the outside area\n   // this.mask = new Mask(env.image, this.inner);\n\n    this.freehand.appendChild(this.outer);\n    this.freehand.appendChild(this.inner);\n\n    // Additionally, selection remains hidden until \n    // the user actually moves the mouse\n    this.group.style.display = 'none';\n\n   // TODO optional: mask to dim the outside area\n   // this.group.appendChild(this.mask.element);\n    this.group.appendChild(this.freehand);\n\n    g.appendChild(this.group);\n  }\n\n  setPoints = points => {\n    var str = points.map(pt => `L${pt[0]} ${pt[1]}`).join(' ');\n    str = 'M' + str.substring(1);\n    this.outer.setAttribute('d', str);\n    this.inner.setAttribute('d', str);\n  }\n\n  getBoundingClientRect = () =>\n    this.outer.getBoundingClientRect();\n\n  dragTo = xy => {\n    // Make visible\n    this.group.style.display = null;\n\n    //TODO optional: edge smoothing\n\n    this.addPoint(xy);\n\n   // TODO optional: mask to dim the outside area\n   // this.mask.redraw();\n  }\n\n  addPoint = xy => {\n    this.points = [ ...this.points, xy ];\n    this.setPoints(this.points);   \n   // TODO optional: mask to dim the outside area\n   // this.mask.redraw();\n  }\n\n  get element() {\n    return this.freehand;\n  }\n\n  destroy = () => {\n    this.group.parentNode.removeChild(this.group);\n    this.freehand = null;    \n    this.group = null;\n  }\n\n  toSelection = () => {\n    return new Selection(toSVGTarget(this.group, this.env.image));\n  }\n\n}\n","import EditableShape from '@recogito/annotorious/src/tools/EditableShape';\nimport { drawEmbeddedSVG, svgFragmentToShape, toSVGTarget } from '@recogito/annotorious/src/selectors/EmbeddedSVG';\nimport { SVG_NAMESPACE } from '@recogito/annotorious/src/util/SVG';\nimport { format, setFormatterElSize } from '@recogito/annotorious/src/util/Formatting';\n// TODO optional: mask to dim the outside area\n//import Mask from './FreehandMask';\n\nconst getPoints = shape => {\n  const pointList = shape.querySelector('.a9s-inner').getAttribute('d').split('L');\n  const points = [];\n  if(pointList.length > 0) {\n    var point = pointList[0].substring(1).trim().split(' ');\n    points.push({ x: parseFloat(point[0]), y: parseFloat(point[1]) });\n\n    for (let i = 1; i < pointList.length; i++) {\n      var point = pointList[i].trim().split(' ');\n      points.push({ x: parseFloat(point[0]), y: parseFloat(point[1]) });\n    }\n  }\n\n  return points;\n}\n\nconst getBBox = shape => {\n  return shape.querySelector('.a9s-inner').getBBox();\n}\n\n/**\n * An editable freehand drawing.\n */\nexport default class EditableFreehand extends EditableShape {\n\n  constructor(annotation, g, config, env) {\n    super(annotation, g, config, env);\n\n    this.svg.addEventListener('mousemove', this.onMouseMove);\n    this.svg.addEventListener('mouseup', this.onMouseUp);\n\n    // SVG markup for this class looks like this:\n    // \n    // <g>\n    //   <path class=\"a9s-selection mask\"... />\n    //   <g> <-- return this node as .element\n    //     <polygon class=\"a9s-outer\" ... />\n    //     <polygon class=\"a9s-inner\" ... />\n    //     <g class=\"a9s-handle\" ...> ... </g>\n    //     <g class=\"a9s-handle\" ...> ... </g>\n    //     <g class=\"a9s-handle\" ...> ... </g>\n    //     ...\n    //   </g> \n    // </g>\n\n    // 'g' for the editable free drawing compound shape\n    this.containerGroup = document.createElementNS(SVG_NAMESPACE, 'g');\n\n    this.shape = drawEmbeddedSVG(annotation);\n\n   // TODO optional: mask to dim the outside area\n   // this.mask = new Mask(env.image, this.shape.querySelector('.a9s-inner'));\n    \n   // this.containerGroup.appendChild(this.mask.element);\n\n    this.elementGroup = document.createElementNS(SVG_NAMESPACE, 'g');\n    this.elementGroup.setAttribute('class', 'a9s-annotation editable selected');\n    this.elementGroup.appendChild(this.shape);\n\n    this.containerGroup.appendChild(this.elementGroup);\n    g.appendChild(this.containerGroup);\n\n    format(this.shape, annotation, config.formatter);\n\n    this.shape.querySelector('.a9s-inner')\n      .addEventListener('mousedown', this.onGrab(this.shape));\n\n    const { x, y, width, height } = getBBox(this.shape);\n\n    // TODO optional: handles to stretch the shape\n/*    this.handles = [\n      [ x, y ], \n      [ x + width, y ], \n      [ x + width, y + height ], \n      [ x, y + height ]\n    ].map(t => { \n      const [ x, y ] = t;\n      const handle = this.drawHandle(x, y);\n\n      handle.addEventListener('mousedown', this.onGrab(handle));\n      this.elementGroup.appendChild(handle);\n\n      return handle;\n    });*/\n\n    // The grabbed element (handle or entire shape), if any\n    this.grabbedElem = null;\n\n    // Mouse grab point\n    this.grabbedAt = null;\n  }\n\n  setPoints = (points) => {\n    // Not using .toFixed(1) because that will ALWAYS\n    // return one decimal, e.g. \"15.0\" (when we want \"15\")\n    const round = num => Math.round(10 * num) / 10;\n\n    var str = points.map(pt => `L${round(pt.x)} ${round(pt.y)}`).join(' ');\n    str = 'M' + str.substring(1);\n\n    const inner = this.shape.querySelector('.a9s-inner');\n    inner.setAttribute('d', str);\n\n    const outer = this.shape.querySelector('.a9s-outer');\n    outer.setAttribute('d', str);\n\n    const { x, y, width, height } = outer.getBBox();\n\n    // TODO optional: mask to dim the outside area\n    // this.mask.redraw();\n\n    // TODO optional: handles to stretch the shape\n/*    const [ topleft, topright, bottomright, bottomleft] = this.handles;\n\n    this.setHandleXY(topleft, x, y);\n    this.setHandleXY(topright, x + width, y);\n    this.setHandleXY(bottomright, x + width, y + height);\n    this.setHandleXY(bottomleft, x, y + height);*/\n\n    setFormatterElSize(this.elementGroup, x, y, width, height);\n  }\n\n    // TODO optional: handles to stretch the shape\n/*  stretchCorners = (draggedHandleIdx, anchorHandle, mousePos) => {\n    const anchor = this.getHandleXY(anchorHandle);\n  }*/\n\n  onGrab = grabbedElem => evt => {\n    this.grabbedElem = grabbedElem;\n    const pos = this.getSVGPoint(evt);\n    this.grabbedAt = { x: pos.x, y: pos.y };\n  }\n\n  onMouseMove = evt => {\n    const constrain = (coord, delta, max) =>\n      coord + delta < 0 ? -coord : (coord + delta > max ? max - coord : delta);\n\n    if (this.grabbedElem) {\n      const pos = this.getSVGPoint(evt);\n\n      const { x, y, width, height } = getBBox(this.shape);\n\n      if (this.grabbedElem === this.shape) {\n\n        const { naturalWidth, naturalHeight } = this.env.image;\n\n        const dx = constrain(x, pos.x - this.grabbedAt.x, naturalWidth - width);\n        const dy = constrain(y, pos.y - this.grabbedAt.y, naturalHeight - height);\n\n        const updatedPoints = getPoints(this.shape).map(pt => ({ x: pt.x + dx, y: pt.y + dy }));\n\n        this.grabbedAt = pos;\n\n        this.setPoints(updatedPoints);\n\n        this.emit('update', toSVGTarget(this.shape, this.env.image));\n      }\n      // TODO optional: handles to stretch the shape\n      /* else {\n        const handleIdx = this.handles.indexOf(this.grabbedElem);\n        const oppositeHandle = handleIdx < 2 ? \n          this.handles[handleIdx + 2] : this.handles[handleIdx - 2];\n\n        this.stretchCorners(handleIdx, oppositeHandle, pos);\n\n        this.emit('update', toSVGTarget(this.shape, this.env.image));\n      }*/\n    }\n  }\n\n  onMouseUp = evt => {\n    this.grabbedElem = null;\n    this.grabbedAt = null;\n  }\n\n  get element() {\n    return this.elementGroup;\n  }\n\n  updateState = annotation => {\n    const points = getPoints(svgFragmentToShape(annotation));\n    this.setPoints(points);\n  }\n\n  destroy = () => {\n    this.containerGroup.parentNode.removeChild(this.containerGroup);\n    super.destroy();\n  }\n\n}\n","import Tool from '@recogito/annotorious/src/tools/Tool';\nimport RubberbandFreehand from './RubberbandFreehand';\nimport EditableFreehand from './EditableFreehand';\n\n/**\n * A rubberband selector for freehand fragments.\n */\nexport default class RubberbandFreehandTool extends Tool {\n\n  constructor(g, config, env) {\n    super(g, config, env);\n\n    this._isDrawing = false;\n  }\n\n  startDrawing = (x, y) => {\n    this._isDrawing = true;\n    \n    this.attachListeners({\n      mouseMove: this.onMouseMove,\n      mouseUp: this.onMouseUp,\n      dblClick: this.onDblClick\n    });\n    \n    this.rubberband = new RubberbandFreehand([ x, y ], this.g, this.env);\n  }\n\n  stop = () => {\n    this.detachListeners();\n    \n    this._isDrawing = false;\n\n    if (this.rubberband) {\n      this.rubberband.destroy();\n      this.rubberband = null;\n    }\n  }\n\n  onMouseMove = (x, y) =>\n    this.rubberband.dragTo([ x, y ]);\n\n  onMouseUp = (x, y) => {\n    this.onDblClick(x, y);\n  }\n\n  onDblClick = (x, y) => {\n    this._isDrawing = false;\n\n    this.rubberband.addPoint([ x, y ]);\n\n    this.detachListeners();\n\n    const { width, height } = this.rubberband.getBoundingClientRect();\n\n    const minWidth = this.config.minSelectionWidth || 4;\n    const minHeight = this.config.minSelectionHeight || 4;\n\n    if (width >= minWidth || height >= minHeight) {\n\n      const shape = this.rubberband.element;\n      shape.annotation = this.rubberband.toSelection();\n\n      this.emit('complete', shape);\n    } else {\n      this.emit('cancel');\n    }\n\n    this.stop();\n  }\n\n  get isDrawing() {\n    return this._isDrawing;\n  }\n\n  createEditableShape = annotation =>\n    new EditableFreehand(annotation, this.g, this.config, this.env);\n\n}\n\nRubberbandFreehandTool.identifier = 'freehand';\n\nRubberbandFreehandTool.supports = annotation => {\n  const selector = annotation.selector('SvgSelector');\n  if (selector)\n    return selector.value?.match(/^<svg.*<path/g);\n}","import RubberbandCircleTool from './circle/RubberbandCircleTool';\nimport RubberbandEllipseTool from './ellipse/RubberbandEllipseTool';\nimport RubberbandFreehandTool from './freehand/RubberbandFreehandTool';\n\nconst SelectorPack = (anno, config) => {\n\n  anno.addDrawingTool(RubberbandCircleTool);\n  anno.addDrawingTool(RubberbandEllipseTool);\n  anno.addDrawingTool(RubberbandFreehandTool);\n  \n}\n\nexport default SelectorPack;"],"sourceRoot":""}